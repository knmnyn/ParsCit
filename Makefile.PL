# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker.
use strict;
use warnings;

use 5.000;

use ExtUtils::MakeMaker;

use File::ShareDir::Install;
$File::ShareDir::Install::INCLUDE_DOTFILES = 1;
$File::ShareDir::Install::INCLUDE_DOTDIRS = 1;
install_share dist => "share";


my %WriteMakefileArgs = (
  "ABSTRACT" => "An open-source CRF Reference String and Logical Document Structure Parsing Package",
  "AUTHOR" => "Min-Yen Kan, Isaac G. Councill, C. Lee Giles, Minh-Thang Luong, Huy Nhat Hoang Do",
  "BUILD_REQUIRES" => {
    "Alien::Build" => "0.32",
    "Alien::Build::MM" => "0.32",
    "ExtUtils::MakeMaker" => "6.52"
  },
  "CONFIGURE_REQUIRES" => {
    "Alien::Build" => "0.32",
    "Alien::Build::MM" => "0.32",
    "ExtUtils::MakeMaker" => "6.52",
    "File::ShareDir::Install" => "0.06"
  },
  "DISTNAME" => "ParsCit",
  "EXE_FILES" => [
    "bin/archtest.pl",
    "bin/citeExtract.pl",
    "bin/conlleval.pl",
    "bin/headExtract.pl",
    "bin/parsHed/convert2TokenLevel.pl",
    "bin/parsHed/keywordGen.pl",
    "bin/parsHed/parseXmlHeader.pl",
    "bin/parsHed/redo.parsHed.pl",
    "bin/parsHed/tr2crfpp_parsHed.pl",
    "bin/parseRefStrings.pl",
    "bin/phOutput2xml.pl",
    "bin/redo.parsCit.pl",
    "bin/sectExtract.pl",
    "bin/sectLabel/README",
    "bin/sectLabel/README.txt",
    "bin/sectLabel/genericSect/crossValidation.rb",
    "bin/sectLabel/genericSect/extractFeature.pl",
    "bin/sectLabel/genericSectExtract.pl",
    "bin/sectLabel/getStructureInfo.pl",
    "bin/sectLabel/processOmniXML.pl",
    "bin/sectLabel/processOmniXML_new.pl",
    "bin/sectLabel/processOmniXMLv2.pl",
    "bin/sectLabel/processOmniXMLv3.pl",
    "bin/sectLabel/redo.sectLabel.pl",
    "bin/sectLabel/simplifyOmniXML.pl",
    "bin/sectLabel/single2multi.pl",
    "bin/sectLabel/tr2crfpp.pl",
    "bin/tr2crfpp.pl",
    "bin/xml2train.pl"
  ],
  "LICENSE" => "gpl",
  "MIN_PERL_VERSION" => "5.000",
  "NAME" => "ParsCit",
  "PREREQ_PM" => {
    "Alien::Base" => "0.038",
    "Class::Struct" => 0,
    "Encode" => 0,
    "Env" => 0,
    "Exporter" => 0,
    "File::Basename" => 0,
    "File::Copy" => 0,
    "File::ShareDir" => 0,
    "File::Spec" => 0,
    "File::Temp" => 0,
    "FindBin" => 0,
    "Getopt::Long" => 0,
    "Getopt::Std" => 0,
    "HTML::Entities" => 0,
    "IO::File" => 0,
    "IPC::Run3" => 0,
    "POSIX" => 0,
    "Path::Tiny" => 0,
    "String::Strip" => 0,
    "XML::Parser" => 0,
    "XML::Twig" => 0,
    "XML::Writer" => 0,
    "XML::Writer::String" => 0,
    "lib" => 0,
    "parent" => 0,
    "strict" => 0,
    "utf8" => 0,
    "warnings" => 0
  },
  "TEST_REQUIRES" => {
    "Capture::Tiny" => 0,
    "Test::Most" => 0
  },
  "VERSION" => 130908,
  "test" => {
    "TESTS" => "t/*.t"
  }
);


my %FallbackPrereqs = (
  "Alien::Base" => "0.038",
  "Alien::Build" => "0.32",
  "Alien::Build::MM" => "0.32",
  "Capture::Tiny" => 0,
  "Class::Struct" => 0,
  "Encode" => 0,
  "Env" => 0,
  "Exporter" => 0,
  "ExtUtils::MakeMaker" => "6.52",
  "File::Basename" => 0,
  "File::Copy" => 0,
  "File::ShareDir" => 0,
  "File::Spec" => 0,
  "File::Temp" => 0,
  "FindBin" => 0,
  "Getopt::Long" => 0,
  "Getopt::Std" => 0,
  "HTML::Entities" => 0,
  "IO::File" => 0,
  "IPC::Run3" => 0,
  "POSIX" => 0,
  "Path::Tiny" => 0,
  "String::Strip" => 0,
  "Test::Most" => 0,
  "XML::Parser" => 0,
  "XML::Twig" => 0,
  "XML::Writer" => 0,
  "XML::Writer::String" => 0,
  "lib" => 0,
  "parent" => 0,
  "strict" => 0,
  "utf8" => 0,
  "warnings" => 0
);


# BEGIN code inserted by Dist::Zilla::Plugin::AlienBuild
use Alien::Build::MM;
my $abmm = Alien::Build::MM->new;
%WriteMakefileArgs = $abmm->mm_args(%WriteMakefileArgs);
# END code inserted by Dist::Zilla::Plugin::AlienBuild


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);

{
package
MY;
use File::ShareDir::Install qw(postamble);
}


# BEGIN code inserted by Dist::Zilla::Plugin::AlienBuild
sub MY::postamble {
  $abmm->mm_postamble;
}
# END code inserted by Dist::Zilla::Plugin::AlienBuild

# BEGIN code inserted by ParsCitMaker
{
	package MY;
	no warnings 'redefine';
	use File::ShareDir::Install;
	sub postamble {
		join "\n", $abmm->mm_postamble, File::ShareDir::Install::postamble(@_);
	}
}
# END code inserted by ParsCitMaker
